[tool.pytest.ini_options]
# Pytest configuration for Poe Search

# Test discovery
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Minimum version
minversion = "7.0"

# Add project root to Python path
pythonpath = ["src"]

# Output options
addopts = [
    "-ra",                    # Show short test summary info for all outcomes
    "--strict-markers",       # Require markers to be defined
    "--strict-config",        # Require configuration to be valid
    "--color=yes",           # Colored output
    "-v",                    # Verbose output
    "--tb=short",            # Short traceback format
    "--durations=10",        # Show 10 slowest tests
]

# Test markers
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gui: marks tests as GUI tests (require display server)",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "browser: marks tests that require browser automation",
    "api: marks tests that interact with external APIs",
    "network: marks tests that require network access",
]

# Filter warnings
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore:The 'warn' method is deprecated:DeprecationWarning",
]

# Coverage options (if pytest-cov is installed)
[tool.coverage.run]
source = ["src/poe_search"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
