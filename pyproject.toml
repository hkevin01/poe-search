[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "poe-search"
version = "1.0.0"
description = "A comprehensive tool for searching, organizing, and managing your Poe.com conversations and data"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Kevin", email = "kevin@poe-search.dev"},
]
maintainers = [
    {name = "Kevin", email = "kevin@poe-search.dev"},
]
keywords = [
    "poe",
    "ai",
    "conversation",
    "search",
    "chat",
    "management",
    "gui",
    "claude",
    "gpt",
    "chatbot"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Indexing",
    "Topic :: Utilities",
    "Environment :: X11 Applications :: Qt",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.28.0",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "rich>=13.0.0",
    "aiohttp>=3.8.0",
    "aiofiles>=23.0.0",
    "sqlite-fts4>=1.0.3",
    "python-dateutil>=2.8.0",
    "typing-extensions>=4.0.0",
    "pathlib>=1.0.1; python_version<'3.4'",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/hkevin01/poe-search"
Repository = "https://github.com/hkevin01/poe-search"
Documentation = "https://github.com/hkevin01/poe-search/docs"
"Bug Tracker" = "https://github.com/hkevin01/poe-search/issues"
"Feature Requests" = "https://github.com/hkevin01/poe-search/issues"
Discussions = "https://github.com/hkevin01/poe-search/discussions"

[project.optional-dependencies]
# GUI dependencies
gui = [
    "PyQt6>=6.4.0",
    "selenium>=4.15.0",
    "webdriver-manager>=4.0.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "Pillow>=10.0.0",
    "qasync>=0.24.0",
]

# Development dependencies
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "pytest-qt>=4.2.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    "pre-commit>=3.3.0",
    "tox>=4.0.0",
    "coverage>=7.0.0",
    "types-requests>=2.31.0",
    "types-python-dateutil>=2.8.0",
]

# Documentation dependencies
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.22.0",
    "mkdocs-click>=0.8.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.0",
    "mkdocs-section-index>=0.3.0",
]

# Testing dependencies for GUI
test-gui = [
    "pytest-qt>=4.2.0",
    "pytest-xvfb>=3.0.0",
    "xvfbwrapper>=0.2.9",
]

# Performance optimization dependencies
performance = [
    "orjson>=3.9.0",
    "uvloop>=0.17.0; sys_platform != 'win32'",
    "rapidfuzz>=3.0.0",
]

# All optional dependencies combined
all = [
    "poe-search[gui,dev,docs,test-gui,performance]"
]

[project.scripts]
# Main CLI entry points
poe-search = "poe_search.cli.main:main"
poe-search-cli = "poe_search.cli.main:main"

# GUI entry points
poe-search-gui = "poe_search.gui.__main__:main"
poe-search-app = "poe_search.gui.__main__:main"

# Utility scripts
poe-search-sync = "poe_search.cli.commands.sync:main"
poe-search-export = "poe_search.cli.commands.export:main"
poe-search-config = "poe_search.cli.commands.config:main"

[project.entry-points."console_scripts"]
poe-search = "poe_search.cli.main:main"
poe-search-gui = "poe_search.gui.__main__:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["poe_search*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
"poe_search" = [
    "*.yaml",
    "*.yml",
    "*.json",
    "*.txt",
    "*.md",
]
"poe_search.gui" = [
    "assets/*",
    "icons/*",
    "styles/*",
    "templates/*",
]
"poe_search.config" = [
    "*.yaml",
    "*.yml",
    "templates/*",
]

[tool.setuptools.dynamic]
version = {attr = "poe_search.__version__"}

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["poe_search"]
known_third_party = [
    "PyQt6",
    "selenium",
    "requests",
    "click",
    "pydantic",
    "rich",
    "aiohttp",
    "pytest",
]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "selenium.*",
    "webdriver_manager.*",
    "PyQt6.*",
    "qasync.*",
    "sqlite_fts4.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src/poe_search",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "gui: marks tests as GUI tests",
    "api: marks tests as API tests",
    "unit: marks tests as unit tests",
    "selenium: marks tests that use selenium",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/poe_search"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__main__.py",
    "*/conftest.py",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "test_*.py", "*_test.py"]
skips = ["B101", "B601"]

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by black)
    "W503",  # line break before binary operator
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
    ".mypy_cache",
    ".pytest_cache",
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101",
]

# Tox configuration for testing multiple Python versions
[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
envlist = py38,py39,py310,py311,py312,lint,type-check

[testenv]
deps = 
    pytest>=7.0.0
    pytest-cov>=4.0.0
    pytest-mock>=3.10.0
    pytest-asyncio>=0.21.0
commands = pytest {posargs}

[testenv:lint]
deps = 
    black>=23.0.0
    isort>=5.12.0
    flake8>=6.0.0
commands = 
    black --check src tests
    isort --check-only src tests
    flake8 src tests

[testenv:type-check]
deps = 
    mypy>=1.5.0
    types-requests>=2.31.0
commands = mypy src

[testenv:gui]
deps = 
    {[testenv]deps}
    PyQt6>=6.4.0
    pytest-qt>=4.2.0
commands = pytest tests/gui {posargs}
"""